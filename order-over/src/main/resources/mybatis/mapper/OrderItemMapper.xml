<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.springboot.orderover.mapper.OrderItemMapper">
  <resultMap id="BaseResultMap" type="com.song.springboot.orderover.model.OrderItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="purchase_price" jdbcType="DECIMAL" property="purchasePrice" />
    <result column="purchase_num" jdbcType="INTEGER" property="purchaseNum" />
    <result column="create_time" jdbcType="TIME" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIME" property="updateTime" />
    <result column="udpate_user" jdbcType="VARCHAR" property="udpateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_id, product_id, purchase_price, purchase_num, create_time, create_user, 
    update_time, udpate_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.song.springboot.orderover.model.OrderItem">
    insert into order_item (order_id, product_id, purchase_price,
      purchase_num, create_time, create_user, 
      update_time, udpate_user)
    values (#{orderId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{purchasePrice,jdbcType=DECIMAL}, 
      #{purchaseNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIME}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIME}, #{udpateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.song.springboot.orderover.model.OrderItem">

    insert into order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="purchasePrice != null">
        purchase_price,
      </if>
      <if test="purchaseNum != null">
        purchase_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="udpateUser != null">
        udpate_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="purchasePrice != null">
        #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="purchaseNum != null">
        #{purchaseNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIME},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIME},
      </if>
      <if test="udpateUser != null">
        #{udpateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.song.springboot.orderover.model.OrderItem">
    update order_item
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="purchasePrice != null">
        purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="purchaseNum != null">
        purchase_num = #{purchaseNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIME},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIME},
      </if>
      <if test="udpateUser != null">
        udpate_user = #{udpateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.song.springboot.orderover.model.OrderItem">
    update order_item
    set order_id = #{orderId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      purchase_num = #{purchaseNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIME},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIME},
      udpate_user = #{udpateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>